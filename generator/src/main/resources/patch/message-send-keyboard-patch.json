{
  "objects": {
    "messages_keyboard": {
      "type": "object",
      "properties": {
        "one_time": {
          "type": "boolean",
          "description": "Should this keyboard disappear on first use"
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/messages_keyboard_button"
            }
          }
        }
      },
      "required": [
        "one_time",
        "buttons"
      ]
    },
    "messages_keyboard_returned": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/messages_keyboard"
        },
        {
          "properties": {
            "author_id": {
              "type": "integer",
              "description": "Community or bot, which set this keyboard"
            }
          },
          "required": [
            "author_id"
          ]
        }
      ]
    },
    "messages_message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "random_id": {
          "type": "integer",
          "description": "ID used for sending messages. It returned only for outgoing messages"
        },
        "important": {
          "type": "boolean",
          "description": "Is it an important message"
        },
        "payload": {
          "type": "string"
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message"
          }
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "action": {
          "$ref": "#/definitions/messages_message_action"
        },
        "keyboard": {
          "$ref": "#/definitions/messages_keyboard_returned"
        }
      },
      "required": [
        "date",
        "from_id",
        "id",
        "peer_id",
        "text"
      ]
    }
  },
  "methods": [
    {
      "name": "messages.send",
      "description": "Sends a message.",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "user_id",
          "description": "User ID (by default — current user).",
          "type": "integer"
        },
        {
          "name": "random_id",
          "description": "Unique identifier to avoid resending the message.",
          "type": "integer"
        },
        {
          "name": "peer_id",
          "description": "Destination ID. \"For user: 'User ID', e.g. '12345'. For chat: '2000000000' + 'chat_id', e.g. '2000000001'. For community: '- community ID', e.g. '-12345'. \"",
          "type": "integer"
        },
        {
          "name": "domain",
          "description": "User's short address (for example, 'illarionov').",
          "type": "string"
        },
        {
          "name": "chat_id",
          "description": "ID of conversation the message will relate to.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "user_ids",
          "description": "IDs of message recipients (if new conversation shall be started).",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        {
          "name": "message",
          "description": "(Required if 'attachments' is not set.) Text of the message.",
          "type": "string"
        },
        {
          "name": "lat",
          "description": "Geographical latitude of a check-in, in degrees (from -90 to 90).",
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        {
          "name": "long",
          "description": "Geographical longitude of a check-in, in degrees (from -180 to 180).",
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        {
          "name": "attachment",
          "description": "(Required if 'message' is not set.) List of objects attached to the message, separated by commas, in the following format: \"<owner_id>_<media_id>\", '' — Type of media attachment: 'photo' — photo, 'video' — video, 'audio' — audio, 'doc' — document, 'wall' — wall post, '<owner_id>' — ID of the media attachment owner. '<media_id>' — media attachment ID. Example: \"photo100172_166443618\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "forward_messages",
          "description": "ID of forwarded messages, separated with a comma. Listed messages of the sender will be shown in the message body at the recipient's. Example: \"123,431,544\"",
          "type": "string"
        },
        {
          "name": "sticker_id",
          "description": "Sticker id.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "notification",
          "description": "'1' if the message is a notification (for community messages).",
          "type": "boolean"
        },
        {
          "name": "group_id",
          "description": "Group ID (for group messages with group access token)",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "keyboard",
          "type": "messages_keyboard",
          "description": "keyboard to message"
        }
      ],
      "errors": [
        {
          "name": "API_ERROR_MESSAGES_USER_BLOCKED",
          "code": 900,
          "description": "Can't send messages for users from blacklist"
        },
        {
          "name": "API_ERROR_MESSAGES_DENY_SEND",
          "code": 901,
          "description": "Can't send messages for users without dialogs"
        },
        {
          "name": "API_ERROR_MESSAGES_PRIVACY",
          "code": 902,
          "description": "Can't send messages to this user due to their privacy settings"
        },
        {
          "name": "API_ERROR_MESSAGES_KEYBOARD_INVALID",
          "code": 911,
          "description": "Keyboard format is invalid"
        },
        {
          "name": "API_ERROR_MESSAGES_CHAT_BOT_FEATURE",
          "code": 912,
          "description": "This is a chat bot feature, change this status in settings"
        },
        {
          "name": "API_ERROR_MESSAGES_FORWARD_AMOUNT_EXCEEDED",
          "code": 913,
          "description": "Too many forwarded messages"
        },
        {
          "name": "API_ERROR_MESSAGES_TOO_LONG_MESSAGE",
          "code": 914,
          "description": "Message is too long"
        },
        {
          "name": "API_ERROR_MESSAGES_CHAT_USER_NO_ACCESS",
          "code": 917,
          "description": "You don't have access to this chat"
        },
        {
          "name": "API_ERROR_MESSAGES_FORWARD_ERROR",
          "code": 921,
          "description": "Can't forward these messages"
        }
      ],
      "responses": {
        "response": {
          "$ref": "responses.json#/definitions/messages_send_response"
        }
      }
    }
  ]
}
